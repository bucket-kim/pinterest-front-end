[{"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/index.js":"1","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/App.js":"2","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/reportWebVitals.js":"3","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Header.js":"4","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Mainboard.js":"5","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Pin.js":"6","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/firebase.js":"7","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/api/unsplash.js":"8"},{"size":500,"mtime":1610434309879,"results":"9","hashOfConfig":"10"},{"size":1925,"mtime":1612763035989,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610434309880,"results":"12","hashOfConfig":"10"},{"size":2221,"mtime":1612268222899,"results":"13","hashOfConfig":"10"},{"size":320,"mtime":1612758392037,"results":"14","hashOfConfig":"10"},{"size":382,"mtime":1612758169896,"results":"15","hashOfConfig":"10"},{"size":675,"mtime":1612263596806,"results":"16","hashOfConfig":"10"},{"size":194,"mtime":1612747803608,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qyiphw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/index.js",[],["36","37"],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/App.js",["38","39","40","41"],"import './App.css';\nimport Header from './Header';\nimport Mainboard from './Mainboard';\nimport unsplash from './api/unsplash';\nimport { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction App() {\n\n  const [newPins, setNewPins] = useState([]);\n\n  const makeAPICall = (term) => {\n    // make an api call\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: { \n        query: term, \n        per_page: 20 \n      }\n    });\n  }\n\n  const onSearchSubmit = (term) => {\n    let promises = [];\n    let searchedPins = [];\n    promises.push(\n      makeAPICall(term).then((res) => {\n        let results = res.data.results;\n        results.map((pin) => {\n          searchedPins.push(pin);\n        })\n      })\n    );\n    Promise.all(promises).then(() => {\n      setNewPins(searchedPins)\n    })\n  }\n\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    db.collection(\"terms\").onSnapshot((snapshot) => {\n      let snapshotData = snapshot.docs;\n\n      if (snapshotData.length >= 10) {\n        snapshotData = snapshotData.slice(snapshotData.length - 5, snapshotData.length);\n      }\n      snapshotData.map((doc) => {\n        promises.push(makeAPICall(doc.data().term)\n        .then((res) => {\n          let results = res.data.results;\n          results.map((object) => {\n            pinData.push(object)\n          });\n          pinData.sort((a, b) => {\n            return 0.5 - Math.random();\n          })\n        }));\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      })\n    });\n\n  }\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        {/* header */}\n        <Header onSubmit={onSearchSubmit}/>\n      </div>\n      <div className=\"app__body\">\n        {/* body */}\n        <Mainboard pins={newPins}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/reportWebVitals.js",[],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Header.js",[],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Mainboard.js",[],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/Pin.js",[],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/firebase.js",[],"/Users/bucketkim/Documents/GitHub/pinterest-front-end/pinterest-front-end/src/api/unsplash.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":28,"column":27,"nodeType":"48","messageId":"49","endLine":28,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":48,"column":30,"nodeType":"48","messageId":"49","endLine":48,"endColumn":32},{"ruleId":"46","severity":1,"message":"47","line":52,"column":32,"nodeType":"48","messageId":"49","endLine":52,"endColumn":34},{"ruleId":"50","severity":1,"message":"51","line":69,"column":6,"nodeType":"52","endLine":69,"endColumn":8,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNewPins'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [getNewPins]",{"range":"59","text":"60"},[1623,1625],"[getNewPins]"]